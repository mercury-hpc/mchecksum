#------------------------------------------------------------------------------
# Include source and build directories
#------------------------------------------------------------------------------
set(MCHECKSUM_BUILD_INCLUDE_DEPENDENCIES
  ${CMAKE_CURRENT_SOURCE_DIR}
  ${CMAKE_CURRENT_BINARY_DIR}
)

#------------------------------------------------------------------------------
# External dependencies
#------------------------------------------------------------------------------
# ZLIB
option(MCHECKSUM_USE_ZLIB "Use ZLIB checksum." OFF)
if(MCHECKSUM_USE_ZLIB)
  find_package(ZLIB REQUIRED)
  message(STATUS "ZLIB include directory: ${ZLIB_INCLUDE_DIRS}")
  set(MCHECKSUM_HAS_ZLIB 1)
  set(MCHECKSUM_INT_INCLUDE_DEPENDENCIES
    ${MCHECKSUM_INT_INCLUDE_DEPENDENCIES}
    ${ZLIB_INCLUDE_DIRS}
  )
  set(MCHECKSUM_INT_LIB_DEPENDENCIES
    ${MCHECKSUM_INT_LIB_DEPENDENCIES}
    ${ZLIB_LIBRARIES}
  )
endif()

# SSE 4.2
if(WIN32)
  set(MCHECKSUM_SSE4_2_OPTIONS /arch:SSE4.2)
else()
  set(MCHECKSUM_SSE4_2_OPTIONS -msse4.2)
endif()
try_compile(MCHECKSUM_CAN_COMPILE_SSE4_2
  ${CMAKE_BINARY_DIR} ${MCHECKSUM_CMAKE_MODULE_PATH}/CheckSSE42.c
  COMPILE_DEFINITIONS ${MCHECKSUM_SSE4_2_OPTIONS}
  OUTPUT_VARIABLE CHECK_SSE4_2_OUTPUT)
option(MCHECKSUM_USE_SSE4_2 "Use SSE 4.2 instruction set." ${MCHECKSUM_CAN_COMPILE_SSE4_2})
if(MCHECKSUM_USE_SSE4_2)
  message(STATUS "Using SSE 4.2 instruction set.")
  if(NOT ${MCHECKSUM_CAN_COMPILE_SSE4_2})
    message(FATAL_ERROR "This platform is not capable of compiling with SSE 4.2 instructions.")
  endif()
  add_compile_options(${MCHECKSUM_SSE4_2_OPTIONS})
  set(MCHECKSUM_HAS_SSE4_2 1)
endif(MCHECKSUM_USE_SSE4_2)

# ISA-L
option(MCHECKSUM_USE_ISAL "Use Intel(R) ISA-L library." OFF)
if(MCHECKSUM_USE_ISAL)
  find_package(ISAL REQUIRED)
  message(STATUS "ISA-L include directory: ${ISAL_INCLUDE_DIRS}")
  set(MCHECKSUM_HAS_ISAL 1)
  set(MCHECKSUM_INT_INCLUDE_DEPENDENCIES
    ${MCHECKSUM_INT_INCLUDE_DEPENDENCIES}
    ${ISAL_INCLUDE_DIRS}
  )
  set(MCHECKSUM_INT_LIB_DEPENDENCIES
    ${MCHECKSUM_INT_LIB_DEPENDENCIES}
    ${ISAL_LIBRARIES}
  )
endif()

#------------------------------------------------------------------------------
# Configure module header files
#------------------------------------------------------------------------------
# Set unique var used in the autogenerated config file (symbol import/export)
configure_file(
  ${CMAKE_CURRENT_SOURCE_DIR}/mchecksum_config.h.in
  ${CMAKE_CURRENT_BINARY_DIR}/mchecksum_config.h
)

#------------------------------------------------------------------------------
# Set sources
#------------------------------------------------------------------------------
set(MCHECKSUM_SRCS
  ${CMAKE_CURRENT_SOURCE_DIR}/mchecksum.c
  ${CMAKE_CURRENT_SOURCE_DIR}/mchecksum_crc16.c
  ${CMAKE_CURRENT_SOURCE_DIR}/mchecksum_crc32c.c
  ${CMAKE_CURRENT_SOURCE_DIR}/mchecksum_crc64.c
)

if(MCHECKSUM_HAS_ZLIB)
  set(MCHECKSUM_SRCS
    ${MCHECKSUM_SRCS}
    ${CMAKE_CURRENT_SOURCE_DIR}/mchecksum_zlib.c
  )
endif()

set(MCHECKSUM_HASH_TYPES crc16 crc32c crc64)
if(MCHECKSUM_HAS_ZLIB)
  set(MCHECKSUM_HASH_TYPES ${MCHECKSUM_HASH_TYPES} crc32 adler32)
endif()

#-----------------------------------------------------------------------------
# Specify project public header files to be installed
#-----------------------------------------------------------------------------
set(MCHECKSUM_PUBLIC_HEADERS
  ${CMAKE_CURRENT_SOURCE_DIR}/mchecksum.h
  ${CMAKE_CURRENT_BINARY_DIR}/mchecksum_config.h
)

#-----------------------------------------------------------------------------
# Specify project private header files
#-----------------------------------------------------------------------------
set(MCHECKSUM_PRIVATE_HEADERS
${CMAKE_CURRENT_SOURCE_DIR}/mchecksum_error.h
${CMAKE_CURRENT_SOURCE_DIR}/mchecksum_plugin.h
)

#----------------------------------------------------------------------------
# Libraries
#----------------------------------------------------------------------------

# Clean up system include path first
mchecksum_clean_include_path(MCHECKSUM_INT_INCLUDE_DEPENDENCIES)
mchecksum_clean_include_path(MCHECKSUM_EXT_INCLUDE_DEPENDENCIES)

# mchecksum
add_library(mchecksum ${MCHECKSUM_SRCS}
  ${MCHECKSUM_PRIVATE_HEADERS} ${MCHECKSUM_PUBLIC_HEADERS}
)
target_include_directories(mchecksum
  PUBLIC  "$<BUILD_INTERFACE:${MCHECKSUM_BUILD_INCLUDE_DEPENDENCIES}>"
           $<INSTALL_INTERFACE:${MCHECKSUM_INSTALL_INCLUDE_INTERFACE}>
)
target_include_directories(mchecksum
  SYSTEM PUBLIC   ${MCHECKSUM_EXT_INCLUDE_DEPENDENCIES}
         PRIVATE  ${MCHECKSUM_INT_INCLUDE_DEPENDENCIES}
)
target_link_libraries(mchecksum
  PUBLIC  ${MCHECKSUM_EXT_LIB_DEPENDENCIES}
  PRIVATE ${MCHECKSUM_INT_LIB_DEPENDENCIES}
)
mchecksum_set_lib_options(mchecksum "mchecksum" ${MCHECKSUM_LIBTYPE})
if(MCHECKSUM_ENABLE_COVERAGE)
  set_coverage_flags(mchecksum)
endif()
set_target_properties(mchecksum PROPERTIES
  PUBLIC_HEADER "${MCHECKSUM_PUBLIC_HEADERS}"
)

set(MCHECKSUM_EXPORTED_LIBS mchecksum ${MCHECKSUM_EXPORTED_LIBS})

#---------------------------------------------------------------------------
# Add Target(s) to CMake Install
#---------------------------------------------------------------------------
install(
  TARGETS
    mchecksum
  EXPORT
    ${MCHECKSUM_EXPORTED_TARGETS}
  LIBRARY DESTINATION ${MCHECKSUM_INSTALL_LIB_DIR}
  ARCHIVE DESTINATION ${MCHECKSUM_INSTALL_LIB_DIR}
  PUBLIC_HEADER DESTINATION ${MCHECKSUM_INSTALL_INCLUDE_DIR}
  RUNTIME DESTINATION ${MCHECKSUM_INSTALL_BIN_DIR}
)

# This may not be the conventional way of doing things but we need a dirty hack
# to have targets exported into multiple locations
if(MCHECKSUM_EXTERNALLY_CONFIGURED AND MCHECKSUM_EXTERNAL_EXPORTED_TARGETS)
install(
  TARGETS
    mchecksum
  EXPORT
    ${MCHECKSUM_EXTERNAL_EXPORTED_TARGETS}
  LIBRARY DESTINATION ${MCHECKSUM_INSTALL_LIB_DIR}
  ARCHIVE DESTINATION ${MCHECKSUM_INSTALL_LIB_DIR}
  PUBLIC_HEADER DESTINATION ${MCHECKSUM_INSTALL_INCLUDE_DIR}
  RUNTIME DESTINATION ${MCHECKSUM_INSTALL_BIN_DIR}
)
endif()

#-----------------------------------------------------------------------------
# Add Target(s) to CMake Install for import into other projects
#-----------------------------------------------------------------------------
install(
  EXPORT
    ${MCHECKSUM_EXPORTED_TARGETS}
  DESTINATION
    ${MCHECKSUM_INSTALL_DATA_DIR}/cmake/${MCHECKSUM_PACKAGE}
  FILE
    ${MCHECKSUM_EXPORTED_TARGETS}.cmake
)

#-----------------------------------------------------------------------------
# Export all exported targets to the build tree for use by parent project
#-----------------------------------------------------------------------------
if(NOT MCHECKSUM_EXTERNALLY_CONFIGURED)
export(
  TARGETS
    ${MCHECKSUM_EXPORTED_LIBS}
  FILE
    ${MCHECKSUM_EXPORTED_TARGETS}.cmake
)
endif()

#------------------------------------------------------------------------------
# Set variables for parent scope
#------------------------------------------------------------------------------
set(MCHECKSUM_HASH_TYPES ${MCHECKSUM_HASH_TYPES} PARENT_SCOPE)

#-----------------------------------------------------------------------------
# For automake compatibility, also provide a pkgconfig file
#-----------------------------------------------------------------------------
if(NOT WIN32)
  # Retrieve Mchecksum library
  mchecksum_get_pc_lib_name(MCHECKSUM_PC_LIBRARY mchecksum)

  # Internal library dependencies
  mchecksum_get_pc_lib_deps(MCHECKSUM_PC_INT_LIB_DEPENDENCIES "${MCHECKSUM_INT_LIB_DEPENDENCIES}")

  # External library dependencies
  mchecksum_get_pc_lib_deps(MCHECKSUM_PC_LIB_DEPENDENCIES "${MCHECKSUM_EXT_LIB_DEPENDENCIES}")

  # External include dependencies
  if(MCHECKSUM_EXT_INCLUDE_DEPENDENCIES)
    list(REMOVE_DUPLICATES MCHECKSUM_EXT_INCLUDE_DEPENDENCIES)
    mchecksum_get_pc_inc_deps(MCHECKSUM_PC_INCLUDE_DEPENDENCIES "${MCHECKSUM_EXT_INCLUDE_DEPENDENCIES}")
  endif()

  # Configure pkg-config file
  configure_file(
    ${MCHECKSUM_SOURCE_DIR}/CMake/${MCHECKSUM_PACKAGE}.pc.in
    ${MCHECKSUM_BINARY_DIR}/CMakeFiles/${MCHECKSUM_PACKAGE}.pc @ONLY
  )

  # Install pkg-config file
  install(
    FILES
      ${MCHECKSUM_BINARY_DIR}/CMakeFiles/${MCHECKSUM_PACKAGE}.pc
    DESTINATION
      ${MCHECKSUM_INSTALL_LIB_DIR}/pkgconfig
  )
endif()
